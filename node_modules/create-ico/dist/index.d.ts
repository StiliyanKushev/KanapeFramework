/// <reference types="node" />
import { Options as PngquantOptions } from 'imagemin-pngquant';
export interface CreateIcoOptions {
    /**
     * Optional mask to apply to the icon.
     */
    shape?: 'circle';
    /**
     * Icon sizes to generate. Defaults to [16, 32], as recommended for favicons.
     * Size cannot exceed 256 (the ico format stores width & height as a single
     * byte each).
     */
    sizes?: number[];
    /**
     * Options passed to pngquant. Defaults to speed 1, strip metadata.
     * @see https://www.npmjs.com/package/imagemin-pngquant#options
     */
    pngquant?: PngquantOptions;
}
/**
 * Generates an ico from the given image and returns it as a Buffer.
 *
 * @param input The input image {@link https://sharp.pixelplumbing.com/api-constructor as accepted by sharp}.
 * @param options Options object.
 */
export declare function createIco(input: string | Buffer, options?: CreateIcoOptions): Promise<Buffer>;
/**
 * Generates an ico from the given image and saves it to the specified path.
 *
 * @param input The input image {@link https://sharp.pixelplumbing.com/api-constructor as accepted by sharp}.
 * @param output The output file path.
 * @param options Options object.
 */
export declare function createIco(input: string | Buffer, output: string, options?: CreateIcoOptions): Promise<void>;
